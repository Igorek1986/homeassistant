# # ##################################
# # System - START message
# # ##################################
# - alias: system_start_message
  # initial_state: 'true'
  # trigger:
    # - platform: homeassistant
      # event: start
  # action:
    # - service: homeassistant.update_entity
      # entity_id: 
        # - sensor.host_uptime
        # - sensor.ha_uptime
        # # - sensor.ha_init
    # - service: notify.telegram_id_1
      # data_template:
        # message: "\U0001F603 Сервер запущен за {{states('sensor.start_time')|int}}сек!"
    # # - service: script.turn_on
    # #   entity_id: script.system_start
    # # - service: counter.increment
    # #   entity_id: counter.restart_counter
    
# # ##################################
# # System - STOP message
# # ##################################
# - alias: system_stop_message
  # initial_state: 'true'
  # trigger:
    # - platform: event
      # event_type: homeassistant_stop
  # action:
    # - service: notify.telegram_id_1
      # data_template:
        # message: "\U0001F621 Сервер остановлен после {{states('sensor.ha_uptime_text').replace('d','д').replace('h','ч').replace('m','м')}} работы!"
        
        
# ##################################
# System - Sensors Low Battery Notification
# ##################################
# - alias: system_low_battery
  # initial_state: 'true'
  # trigger:
    # - platform: time
      # at: "20:30:00"
  # action:
    # - service: group.set
      # data_template:
        # object_id: batteries
        # entities: >-
          # {%-for state in states.sensor if state.entity_id.endswith("_battery")%}
          # {{ state.entity_id}}{%- if not loop.last -%}, {%- endif -%}
          # {%-endfor%}
    # - service: script.turn_on
      # entity_id: script.battery_level_check
      
# ##################################
# System - Hass.io NEW Device
# ##################################
# - alias: system_new_device_found
  # initial_state: 'true'
  # mode: parallel
  # trigger:
    # - platform: event
      # event_type: device_tracker_new_device
  # action:
    # - service: notify.telegram_id_1
      # data_template: 
        # message: "\U00002734 Новое устройство: {{ trigger.event.data.host_name if trigger.event.data.host_name is defined else 'NA' }} - ({{ trigger.event.data.entity_id if trigger.event.data.entity_id is defined else 'NA' }})"

