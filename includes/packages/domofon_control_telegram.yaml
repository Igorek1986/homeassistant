# domofon_teleg:
#   automation:
#   - alias: '–¢–µ–ª–µ–≥—Ä–∞–º: –î–æ–º–æ—Ñ–æ–Ω. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ'
#     description: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–æ—Ñ–æ–Ω–æ–º —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º
#     trigger:
#     - platform: event
#       event_type: telegram_callback
#       event_data: {}
#     condition: []
#     action:
#     - choose:
#       - conditions:
#         - condition: template
#           value_template: '{{ trigger.event.data.command == ''/domofon'' }}'
#         sequence:
#         - service: telegram_bot.send_message
#           data:
#             message: | 
#               {{"\U0001F4AC"}} –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä
#         - service: telegram_bot.send_message
#           data:
#             target: '{{ trigger.event.data.chat_id }}'
#             message: &msg |
#               {{'\U00002699'}} **–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –¥–æ–º–æ—Ñ–æ–Ω–∞**
#   #–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
#             inline_keyboard: &keyb
#             - '{% set domofon_modes = states("input_select.smart_domofon_scrators_modes") %}
#               {% if domofon_modes == "–ù–µ –∞–∫—Ç–∏–≤–µ–Ω" %} {{"üü¢"}}
#               {% else %} {{"üî¥"}}
#               {% endif %} 
#               –ù–µ –∞–∫—Ç–∏–≤–µ–Ω:/domofon_not_active,
#               {% set domofon_modes = states("input_select.smart_domofon_scrators_modes") %}
#               {% if domofon_modes == "–û—Ç–∫—Ä—ã–≤–∞—Ç—å –≤—Å–µ–≥–¥–∞" %} {{"üü¢"}}
#               {% else %} {{"üî¥"}}
#               {% endif %} 
#               –û—Ç–∫—Ä—ã–≤–∞—Ç—å –≤—Å–µ–≥–¥–∞:/domofon_open_always'
#             - '{% if is_state("switch.smart_domofon_scrators_mute", "on") %} {{"üü¢"}}
#               {% else %} {{"üî¥"}} 
#               {% endif %}
#               –ë–µ–∑–∑–≤—É—á–Ω—ã–π —Ä–µ–∂–∏–º:/domofon_mute,
#               {% set domofon_modes = states("input_select.smart_domofon_scrators_modes") %}
#               {% if domofon_modes == "–°–±—Ä–æ—Å –≤—ã–∑–æ–≤–∞" %} {{"üü¢"}}
#               {% else %} {{"üî¥"}}
#               {% endif %} 
#               –°–±—Ä–æ—Å –≤—ã–∑–æ–≤–∞:/domofon_reset_call'
#             - '{% set domofon_modes = states("input_select.smart_domofon_scrators_modes") %}
#               {% if domofon_modes == "–°–±—Ä–æ—Å –≤—ã–∑–æ–≤–∞ –µ—Å–ª–∏ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞" %} {{"üü¢"}}
#               {% else %} {{"üî¥"}}
#               {% endif %} 
#               –°–±—Ä–æ—Å –≤—ã–∑–æ–≤–∞ –µ—Å–ª–∏ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞:/domofon_resetting_call_no_response'
#             - –ù–∞–∑–∞–¥:/backhome
    
#   #–ö–Ω–æ–ø–∫–∞ ‚Ññ1. –ù–µ –∞–∫—Ç–∏–≤–µ–Ω
#       - conditions:
#         - condition: template
#           value_template: '{{ trigger.event.data.command == "/domofon_not_active" }}'
#         sequence:
#         - service: input_select.select_option
#           target:
#             entity_id: input_select.smart_domofon_scrators_modes
#           data:
#             option: –ù–µ –∞–∫—Ç–∏–≤–µ–Ω
#         - delay:
#             milliseconds: 300
#         - service: telegram_bot.edit_message
#           data:
#             message_id: '{{ trigger.event.data.message.message_id }}'
#             chat_id: '{{ trigger.event.data.user_id }}'
#             callback_query_id: '{{ trigger.event.data.id }}'
#             message: *msg
#             inline_keyboard: *keyb
  
#   #–ö–Ω–æ–ø–∫–∞ ‚Ññ2. –û—Ç–∫—Ä—ã–≤–∞—Ç—å –≤—Å–µ–≥–¥–∞
#       - conditions:
#         - condition: template
#           value_template: '{{ trigger.event.data.command == "/domofon_open_always" }}'
#         sequence:
#         - service: input_select.select_option
#           target:
#             entity_id: input_select.smart_domofon_scrators_modes
#           data:
#             option: –û—Ç–∫—Ä—ã–≤–∞—Ç—å –≤—Å–µ–≥–¥–∞
#         - delay:
#             milliseconds: 300
#         - service: telegram_bot.edit_message
#           data:
#             message_id: '{{ trigger.event.data.message.message_id }}'
#             chat_id: '{{ trigger.event.data.user_id }}'
#             callback_query_id: '{{ trigger.event.data.id }}'
#             message: *msg
#             inline_keyboard: *keyb
  
#   #–ö–Ω–æ–ø–∫–∞ ‚Ññ3. –ë–µ–∑–∑–≤—É—á–Ω—ã–π —Ä–µ–∂–∏–º
#       - conditions:
#         - condition: template
#           value_template: '{{ trigger.event.data.command == "/domofon_mute" }}'
#         sequence:
#         - service: switch.toggle
#           target:
#             entity_id: switch.smart_domofon_scrators_mute
#         - delay:
#             milliseconds: 300
#         - service: telegram_bot.edit_message
#           data:
#             message_id: '{{ trigger.event.data.message.message_id }}'
#             chat_id: '{{ trigger.event.data.user_id }}'
#             callback_query_id: '{{ trigger.event.data.id }}'
#             message: *msg
#             inline_keyboard: *keyb
  
#   #–ö–Ω–æ–ø–∫–∞ ‚Ññ4. –°–±—Ä–æ—Å –≤—ã–∑–æ–≤–∞
#       - conditions:
#         - condition: template
#           value_template: '{{ trigger.event.data.command == "/domofon_reset_call" }}'
#         sequence:
#         - service: input_select.select_option
#           target:
#             entity_id: input_select.smart_domofon_scrators_modes
#           data:
#             option: –°–±—Ä–æ—Å –≤—ã–∑–æ–≤–∞
#         - delay:
#             milliseconds: 300
#         - service: telegram_bot.edit_message
#           data:
#             message_id: '{{ trigger.event.data.message.message_id }}'
#             chat_id: '{{ trigger.event.data.user_id }}'
#             callback_query_id: '{{ trigger.event.data.id }}'
#             message: *msg
#             inline_keyboard: *keyb
  
#   #–ö–Ω–æ–ø–∫–∞ ‚Ññ5. –°–±—Ä–æ—Å –≤—ã–∑–æ–≤–∞ –µ—Å–ª–∏ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞
#       - conditions:
#         - condition: template
#           value_template: '{{ trigger.event.data.command == "/domofon_resetting_call_no_response" }}'
#         sequence:
#         - service: input_select.select_option
#           target:
#             entity_id: input_select.smart_domofon_scrators_modes
#           data:
#             option: –°–±—Ä–æ—Å –≤—ã–∑–æ–≤–∞ –µ—Å–ª–∏ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞
#         - delay:
#             milliseconds: 300
#         - service: telegram_bot.edit_message
#           data:
#             message_id: '{{ trigger.event.data.message.message_id }}'
#             chat_id: '{{ trigger.event.data.user_id }}'
#             callback_query_id: '{{ trigger.event.data.id }}'
#             message: *msg
#             inline_keyboard: *keyb
#       default: []
#     mode: restart
    
    
# #   - id: telegram-control-pannel-start
#   - alias: 'Telegram Control Pannel Command'
#     initial_state: on
#     trigger:
#     - platform: event
#       event_type: telegram_callback
#       event_data:
#         data: '/menu'
#     action:
#     - service: telegram_bot.send_message
#       data_template:
#           target: '{{ trigger.event.data.data.id }}'
#           message: >
#               {{ [
#               "–ü—Ä—ñ–≤–µ—Ç—ñ–∫—ñ",
#               "–î–æ –∑—ñ—Ä–æ–∫",
#               "–°–µ—Ä, –î–∞ —Å–µ—Ä!",
#               "–ó–¥–æ—Ä–æ–≤–µ–Ω—å–∫—ñ –±—É–ª–∏!",
#               "–í–µ—á—ñ—Ä –≤ —Ö–∞—Ç—É!",
#               "–ó–¥—Ä–∞—Å—Ç—å!",
#               "–®–æ —Ç–∞–∫–æ—î?",
#               "–ü–∞—î—Ö–∞–ª—ñ",
#               "—Ö–µ–ª–ª–æ –∞–º—ñ–≥–æ",
#               "–ë—É–µ–Ω–æ—Å –Ω–æ—á–µ—Å!"
#               ] | random }}       
#           data:
#           inline_keyboard:
#             - '{{"\U0001F4A1"}} Lights:/lights, {{"\u2753"}} Status:/sstatus, {{"\u26D4"}} Security:/security'
#             - '{{"\U0001F6E0"}} System:/system, {{"\U0001F501"}} Ping:/ping, {{"\U0001F4CC"}} User location:/location '
#             - '{{"\U0001F324"}} Weather:/weather, {{"\U0001F4B5"}} Shoping :/shopinglist'
